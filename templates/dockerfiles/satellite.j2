{% include 'variables.j2' %}

COPY resources/{{ product }}-server-{{ xl_version }}.zip /tmp
RUN mkdir -p ${APP_ROOT} && \
    unzip /tmp/{{ product }}-server-{{ xl_version }}.zip -d ${APP_ROOT} && \
    mv ${APP_ROOT}/{{ product }}-server-{{ xl_version }} ${APP_HOME}

# Add bin/run-in-container.sh
COPY resources/run-in-container.sh ${APP_HOME}/bin/

# Add jmx-exporter for prometheus
COPY resources/jmx_prometheus_javaagent.jar ${APP_HOME}/lib/
COPY resources/jmx-exporter.yaml ${APP_HOME}/conf/

# Modify bin/run.sh so that java becomes a child process of dumb-init
RUN sed -i 's/^\($JAVACMD\)/exec \1/' ${APP_HOME}/bin/run.sh


# Modify conf/{{ wrapper_conf }} to add node-conf to the classpath and to add container-specific VM options
# ${APP_HOME}/node-conf will have first priority in classpath
COPY resources/modify-wrapper-linux-conf.gawk /tmp
RUN chmod +x /tmp/modify-wrapper-linux-conf.gawk && \
    /tmp/modify-wrapper-linux-conf.gawk ${APP_HOME}/conf/{{ wrapper_conf }} > /tmp/{{ wrapper_conf}} && \
    mv /tmp/{{ wrapper_conf }} ${APP_HOME}/conf/{{ wrapper_conf }} && \
    rm /tmp/modify-wrapper-linux-conf.gawk

COPY resources/satellite.conf.template ${APP_HOME}/conf/satellite.conf.template

# Create empty 'workdir' directory
RUN mkdir ${APP_HOME}/workdir

# Set permissions
RUN chgrp -R 0 ${APP_ROOT} && \
    chmod -R g=u ${APP_ROOT} && \
    chmod g+x ${APP_HOME}/bin/*.sh